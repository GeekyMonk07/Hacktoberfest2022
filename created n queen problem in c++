# include<bits/stdc++.h>
using namespace std;
#define n 4
#define m 4
int count=0;
    bool issafe(int arr[n][m],int row, int col ){
       
    for (int i = 0; i < col; i++)
    {
        if (arr[row][i] == 1)
        {
            return false;
        }
    }
    for (int j = 0; j < row; j++)
    {

        if (arr[j][col] == 1)
        {
            return false;
        }
    }
    ////diagonal//

    int r = row;
    int c = col;
    while (r >= 0 && c >= 0)
    {
        if (arr[r][c] == 1)
        {

            return false;
        }
        r--;
        c--;
    }
    r = row, c = col;
    while (r >= 0 && c <= m - 1)
    {
        if (arr[r][c] == 1)
        {

            return false;
        }
        r--;
        c++;
    }
    r = row, c = col;
    while (r <= n - 1 && c >= 0)
    {
        if (arr[r][c] == 1)
        {

            return false;
        }
        r++;
        c--;
    }
    r = row, c = col;
    while (r <= n - 1 && c <= m - 1)
    {
        if (arr[r][c] == 1)
        {

            return false;
        }
        r++;
        c++;
    }
    return true;
   }
    bool  nqueenproblem(int arr[n][m],int row){
     if(row>=n ){
       return true;
     }
     
        for(int i=0;i<m;i++){
            if(issafe(arr,row, i)){
                arr[row][i]=1;
                if(nqueenproblem(arr,row+1))
                return true;
                
        
                arr[row][i]=0;
                
                
        }
      
     }
     return false;
     
    }
int main(){

    int arr[n][m];
    cout<<"whter 1 and 0 in chess board"<<endl;
for(int i=0;i<n;i++){
    for(int j=0;j<m;j++){
        cin>>arr[i][j];
    }
    cout<<endl;
}

if(nqueenproblem(arr,0)==true){
    for(int i=0;i<n;i++){
        for(int j=0;j<m;j++){
            cout<<arr[i][j];
        }
        cout<<endl;
    }
    
}
else{
    cout<<"does not exist"<<endl;
}
return 0;
}
